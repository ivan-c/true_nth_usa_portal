"""SitePersistence Module"""
from flask import current_app

from .config_persistence import export_config, import_config
from ..database import db
from ..models.app_text import AppText
from ..models.communication_request import CommunicationRequest
from ..models.intervention import Intervention
from ..models.intervention_strategies import AccessStrategy
from ..models.organization import Organization
from ..models.questionnaire import Questionnaire
from ..models.questionnaire_bank import QuestionnaireBank
from ..models.research_protocol import ResearchProtocol
from ..models.scheduled_job import ScheduledJob
from .model_persistence import export_model, import_model


class SitePersistence(object):
    """Manage import and export of dynamic site data"""

    VERSION = '0.1'

    def _log(self, msg):
        current_app.logger.info(msg)

    def export(self, dir):
        """Generate JSON files defining dynamic site objects

        :param dir: used to name a non-default target directory for export files

        Export dynamic data, such as Organizations and Access Strategies for
        import into other sites.  This does NOT export values expected
        to live in the site config file or the static set generated by the seed
        managment command.

        To import the data, use the seed command as defined in manage.py
        """

        # The following model classes write to independent files
        for model in (
                Organization, Intervention, AccessStrategy, Questionnaire,
                QuestionnaireBank, AppText, CommunicationRequest,
                ResearchProtocol):
            export_model(model, target_dir=dir)

        # Add site.cfg
        export_config(target_dir=dir)


    def import_(self, keep_unmentioned):
        """If persistence file is found, import the data

        :param keep_unmentioned: if True, unmentioned data, such as
            an organization or intervention in the current database
            but not in the persistence file, will be left in place.
            if False, any unmentioned data will be purged as part of
            the import process.

        """
        # ResearchProtocols before Orgs (Orgs point to RPs)
        import_model(
            ResearchProtocol, 'research_protocols_id_seq',
            lookup_field='name', keep_unmentioned=keep_unmentioned)

        # Orgs before all else:
        import_model(
            Organization, 'organizations_id_seq',
            keep_unmentioned=keep_unmentioned)

        # Questionnaires:
        import_model(
            Questionnaire, 'questionnaires_id_seq', lookup_field='name',
            keep_unmentioned=keep_unmentioned)

        # QuestionnaireBanks:
        import_model(
            QuestionnaireBank, 'questionnaire_banks_id_seq',
            lookup_field='name', keep_unmentioned=keep_unmentioned)

        # Interventions
        import_model(
            Intervention, 'interventions_id_seq', lookup_field='name',
            keep_unmentioned=keep_unmentioned)

        # Access rules next
        import_model(
            AccessStrategy, 'access_strategies_id_seq',
            keep_unmentioned=keep_unmentioned)

        # CommunicationRequest depends on QuestionnaireBanks
        import_model(
            CommunicationRequest, 'communication_requests_id_seq',
            lookup_field='identifier', keep_unmentioned=keep_unmentioned)

        # App Text shouldn't be order dependent, now is good.
        import_model(
            AppText, 'apptext_id_seq', lookup_field='name',
            keep_unmentioned=keep_unmentioned)

        # ScheduledJobs shouldn't be order dependent, now is good.
        import_model(
            ScheduledJob, 'scheduled_jobs_id_seq', lookup_field='name',
            keep_unmentioned=keep_unmentioned)

        # Config isn't order dependent, now is good.
        import_config()

        db.session.commit()

        self._log("SitePersistence import complete")
