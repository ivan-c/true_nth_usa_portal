language: python
python: "2.7"
sudo: required
cache: pip
addons:
  postgresql: "9.4"

services:
  - postgresql
  - redis-server
env:
  matrix:
    - TOXENV=py27
    - TOXENV=docs
  global:
    - SQLALCHEMY_DATABASE_URI='postgresql://postgres:@localhost/portal_unit_tests'
    - LOG_FOLDER='/tmp/shared_service_log'
    - PERSISTENCE_FILE='https://raw.githubusercontent.com/uwcirg/TrueNTH-USA-site-config/develop/site_persistence_file.json'

matrix:
  include:
    - env: TOXENV=ui
      addons:
        postgresql: "9.4"
        sauce_connect: true
    - env: TOXENV=build
      services:
        - docker
  # Build artifacts only (no testing)
  allow_failures:
    - env: TOXENV=build
      services:
        - docker

before_install:
  # Set Github env vars
  - IFS=/ read GH_USERNAME GH_REPO <<< "$TRAVIS_REPO_SLUG"
  - export GH_USERNAME GH_REPO

  # Only deploy from develop and master branches, and not previously configured
  - if [[ ! -v DEPLOY && ("$TRAVIS_BRANCH" = "master" || "$TRAVIS_BRANCH" = "develop") ]]; then export DEPLOY=true;fi

  # Set TOXENV default (if not already set by matrix environmental variables)
  - if [[ ! -v TOXENV ]]; then export TOXENV=py27;fi

  # Set Docker username from github username (if not already set by repo env vars)
  - export DOCKER_CLOUD_USERNAME=${DOCKER_CLOUD_USERNAME:-${GH_USERNAME//-}}

  # Fetch all remote branches instead of just the currently checked out one
  - git config remote.origin.fetch "+refs/heads/*:refs/remotes/origin/*"
  # setuptools_scm module needs the git history since the last master branch to correctly calculate the number of revisions since then (ie devNNN in 16.12.8.3.dev274+ngd08a23c)
  - git fetch --unshallow

  - psql -c 'create database portal_unit_tests owner postgres;' -U postgres

  - pip install --upgrade pip setuptools
  - export PORTAL_VERSION="$(python setup.py --version)"

install:
  - pip install tox

script:
  - tox

before_deploy:
  - docker login --username "$GH_USERNAME" --password "$BINTRAY_API_KEY" "$GH_USERNAME-docker-portal.bintray.io"
  - if [[ -v DOCKER_CLOUD_API_KEY ]]; then docker login --username "$DOCKER_CLOUD_USERNAME" --password "$DOCKER_CLOUD_API_KEY" https://index.docker.io/v1/;fi

  - docker build --file docker/Dockerfile.build --tag "portal_builddeb:test" .
  - docker volume create --name debian-repo
  # Build artifacts from current repo and branch (else "develop")
  - docker run --volume debian-repo:/tmp/artifacts -e REPO_SLUG=$TRAVIS_REPO_SLUG -e BRANCH=${TRAVIS_BRANCH:-develop} "portal_builddeb:test"

  # Copy artifacts off volume mounted on previous container
  - docker cp $(docker ps --quiet --latest --filter ancestor="portal_builddeb:test"):/tmp/artifacts /tmp
  - cp --verbose /tmp/artifacts/* ../
  # Copy artifacts to current directory to allow local installation
  - cp --recursive --verbose /tmp/artifacts artifacts

  - docker build --file docker/Dockerfile  --tag "portal_deb:test" --tag "portal_web:latest" .

  # Build bintray descriptor file dynamically
  - >
    printf '
    {
        "package": {
            "name": "true_nth_usa_portal",
            "repo": "true_nth",
            "subject": "$GH_USERNAME",
            "public_download_numbers": false,
            "public_stats": false
        },
        "version": {
            "name": "$PORTAL_VERSION",
            "gpgSign": true
        },
        "files": [
            {
                "includePattern": "../(.+\\.deb)$",
                "uploadPattern": "/$1",
                "matrixParams": {
                    "deb_distribution": "stable",
                    "deb_component": "main",
                    "deb_architecture": "amd64"
                }
            }
        ],
        "publish": true
    }
    ' | envsubst | tee "${TRAVIS_BUILD_DIR}/bintray.json"

# Only deploy from default virtual env TravisCI job
deploy:
  on:
    all_branches: true
    condition:
      - $TOXENV = build
      - $DEPLOY = true
      - -v BINTRAY_API_KEY
  provider: bintray
  file: "bintray.json"
  user: $GH_USERNAME
  key: $BINTRAY_API_KEY

after_deploy:
  - docker tag portal_web:latest "$GH_USERNAME-docker-portal.bintray.io/portal_web:latest"
  - docker push "$GH_USERNAME-docker-portal.bintray.io/portal_web:latest"

  - docker tag portal_web:latest "$DOCKER_CLOUD_USERNAME/portal_web:latest"
  - if [[ -v DOCKER_CLOUD_API_KEY ]]; then docker push "docker.io/$DOCKER_CLOUD_USERNAME/portal_web";fi
