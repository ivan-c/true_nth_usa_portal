language: python
python: "2.7"
sudo: required
cache: pip
addons:
  postgresql: "9.4"
git:
  depth: 2000

services:
  - postgresql
  - redis-server
  - docker
env:
  global:
    - SQLALCHEMY_DATABASE_URI='postgresql://postgres:@localhost/portal_unit_tests'
    - LOG_FOLDER='/tmp/shared_service_log'
    - PERSISTENCE_FILE='https://raw.githubusercontent.com/uwcirg/TrueNTH-USA-site-config/develop/site_persistence_file.json'

matrix:
  include:
    - env: TOXENV=docs
    - env:
        - TOXENV=ui
      addons:
        postgresql: "9.4"
        sauce_connect: true

before_install:
  # Set Github env vars
  - IFS=/ read GH_USERNAME GH_REPO <<< "$TRAVIS_REPO_SLUG"

  # Only deploy from develop and master branches, and not previously configured
  - if [[ ! -v DEPLOY && ("$TRAVIS_BRANCH" = "master" || "$TRAVIS_BRANCH" = "develop") ]]; then export DEPLOY=true;fi

  # Set TOXENV default (if not overridden by matrix environmental variables)
  - if [[ ! -v TOXENV ]]; then export TOXENV=py27;fi

  - psql -c 'create database portal_unit_tests owner postgres;' -U postgres

  - pip install --upgrade pip setuptools
  - export PORTAL_VERSION="$(python setup.py --version)"

install:
  - pip install tox

script:
  - tox

before_deploy:
  - docker build --file docker/Dockerfile.build --tag "portal_builddeb:test" .

  # Build artifacts from current repo and branch (else "develop")
  - docker run -e REPO_SLUG=$TRAVIS_REPO_SLUG -e BRANCH=${TRAVIS_BRANCH:-develop} "portal_builddeb:test"
  - docker cp $(docker ps --quiet --latest --filter ancestor="portal_builddeb:test"):/tmp/artifacts /tmp
  - cp /tmp/artifacts/* ../

  # Build bintray descriptor file dynamically
  - >
    printf '
    {
        "package": {
            "name": "true_nth_usa_portal",
            "repo": "true_nth",
            "subject": "$GH_USERNAME",
            "public_download_numbers": false,
            "public_stats": false
        },
        "version": {
            "name": "$PORTAL_VERSION",
            "gpgSign": true
        },
        "files": [
            {
                "includePattern": "../(.+\\.deb)$",
                "uploadPattern": "/$1",
                "matrixParams": {
                    "deb_distribution": "stable",
                    "deb_component": "main",
                    "deb_architecture": "amd64"
                }
            }
        ],
        "publish": true
    }
    ' | envsubst
    > "${TRAVIS_BUILD_DIR}/bintray.json"

# Only deploy from default virtual env TravisCI job
deploy:
  on:
    all_branches: true
    condition:
      - $TOXENV = py27
      - $DEPLOY = true
      - -v BINTRAY_API_KEY
  provider: bintray
  file: "bintray.json"
  user: $GH_USERNAME
  key: $BINTRAY_API_KEY
