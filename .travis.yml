---
language: python
python: "2.7"
sudo: false
cache: pip
# setuptools_scm module needs the git history since the last master branch to correctly calculate the number of revisions since the last release
git:
  depth: 10000
addons:
  postgresql: "9.4"

services:
  - postgresql
  - redis-server
env:
  matrix:
    - TOXENV=py27
  global:
    - FLASK_APP="$(readlink -f manage.py)"
    - PORTAL_VERSION="$(python setup.py --version)"

    - PGUSER=postgres
    - PGPASSWORD=""
    - PGHOST=localhost
    - PGDATABASE=portal_unit_tests
    - SQLALCHEMY_DATABASE_TEST_URI="postgresql://${PGUSER}:${PGPASSWORD}@${PGHOST}/${PGDATABASE}"

    - GH_USERNAME="$(echo $TRAVIS_REPO_SLUG | cut --delimiter / --fields 1)"
    - GH_REPO="$(echo $TRAVIS_REPO_SLUG | cut --delimiter / --fields 2)"
    - GIT_BRANCH="$TRAVIS_BRANCH"
    - GIT_TAG="$TRAVIS_TAG"
    - GIT_HASH="$TRAVIS_COMMIT"

    - PACKAGE_NAME="${PACKAGE_NAME:-${GH_REPO}}"
    - DOCKER_REPO="${DOCKER_REPO:-portal-docker}"
    - DOCKER_REPOSITORY=""
    - DOCKER_IMAGE_NAME="${DOCKER_IMAGE_NAME:-portal_web}"
    - DOCKER_IMAGE_TAG=travis
    - DOCKER_EXTRA_TAGS="$TRAVIS_BUILD_NUMBER"

matrix:
  include:
    - env: TOXENV=py27
    - env: TOXENV=translations PERSISTENCE_FILE="https://raw.githubusercontent.com/uwcirg/TrueNTH-USA-site-config/develop/site_persistence_file.json"
    - env: TOXENV=translations PERSISTENCE_FILE="https://raw.githubusercontent.com/uwcirg/ePROMs-site-config/develop/site_persistence_file.json"
    - env: TOXENV=docs
      services: []
      addons: {}
    - env: TOXENV=build
      services:
        - docker
    - env: TOXENV=ui
      addons:
        postgresql: "9.4"
        sauce_connect: true
  # Build artifacts only (no testing)
  allow_failures:
    - env: TOXENV=ui

before_install:
  # Fetch all remote branches instead of just the currently checked out one
  - git config remote.origin.fetch "+refs/heads/*:refs/remotes/origin/*"

  - createdb
      --owner "$PGUSER"
      --username "$PGUSER"
    "$PGDATABASE"

  - pip install --upgrade pip setuptools

install:
  - pip install tox

script:
  - tox

after_success:
  # Only run build steps in corresponding tox env
  - if [[ "$TOXENV" != "build" ]]; then travis_terminate 0;fi

  - cp docker/portal.env.default docker/portal.env
  - export COMPOSE_FILE='docker/docker-compose.yaml:docker/docker-compose.build.yaml'
  # Build debian package from current repo and branch
  - BRANCH="$GIT_BRANCH"
    docker-compose run builder

  # Build portal docker image from debian package
  - docker-compose build web

before_deploy:
  - ./bin/docker-login.sh

# Only deploy from default virtual env TravisCI job
deploy:
  - provider: script
    skip_cleanup: true
    on:
      branch:
        - develop
        - master
      condition:
        - $TOXENV = build
        - -v ARTIFACTORY_API_KEY
    script:
      curl
        --verbose
        --upload-file debian/artifacts/*.deb
        --user "$ARTIFACTORY_USERNAME:$ARTIFACTORY_API_KEY"
        "$ARTIFACTORY_DEB_REPO/$PACKAGE_NAME;deb.distribution=stable;deb.component=main;deb.architecture=amd64"

after_deploy:
  - ./bin/docker-push.sh
  - docker images --digests --all
