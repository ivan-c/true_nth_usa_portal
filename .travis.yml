---
language: python
python: "2.7"
sudo: false
cache: pip
addons:
  postgresql: "9.4"

services:
  - postgresql
  - redis-server
env:
  matrix:
    - TOXENV=py27
  global:
    - FLASK_APP="$(readlink -f manage.py)"

    - PGUSER=postgres
    - PGPASSWORD=""
    - PGHOST=localhost
    - PGDATABASE=portal_unit_tests
    - SQLALCHEMY_DATABASE_TEST_URI="postgresql://${PGUSER}:${PGPASSWORD}@${PGHOST}/${PGDATABASE}"

    - GH_USERNAME="$(echo $TRAVIS_REPO_SLUG | cut --delimiter / --fields 1)"
    - GH_REPO="$(echo $TRAVIS_REPO_SLUG | cut --delimiter / --fields 2)"
    - SHORT_HASH="${TRAVIS_COMMIT:0:7}"

    - PACKAGE_NAME="${PACKAGE_NAME:-${GH_REPO}}"
    - DOCKER_REPO="${DOCKER_REPO:-portal-docker}"
    - DOCKER_REPOSITORY=""
    - DOCKER_IMAGE_NAME="${DOCKER_IMAGE_NAME:-portal_web}"
    - DOCKER_IMAGE_TAG=travis

matrix:
  include:
    - env: TOXENV=py27
    - env: TOXENV=translations PERSISTENCE_FILE="https://raw.githubusercontent.com/uwcirg/TrueNTH-USA-site-config/develop/site_persistence_file.json"
    - env: TOXENV=translations PERSISTENCE_FILE="https://raw.githubusercontent.com/uwcirg/ePROMs-site-config/develop/site_persistence_file.json"
    - env: TOXENV=docs
      services: []
      addons: {}
    - env: TOXENV=build
      services:
        - docker
    - env: TOXENV=ui
      addons:
        postgresql: "9.4"
        sauce_connect: true
  # Build artifacts only (no testing)
  allow_failures:
    - env: TOXENV=ui

before_install:
  # Only deploy from develop and master branches, and not previously configured
  - if [[ ! -v DEPLOY && ("$TRAVIS_BRANCH" = "master" || "$TRAVIS_BRANCH" = "develop") ]]; then
      export DEPLOY=true;
    fi

  # Set TOXENV default (if not already set by matrix environment variables)
  - if [[ ! -v TOXENV ]]; then export TOXENV=py27;fi

  # Fetch all remote branches instead of just the currently checked out one
  - git config remote.origin.fetch "+refs/heads/*:refs/remotes/origin/*"
  # setuptools_scm module needs the git history since the last master branch to correctly calculate the number of revisions since then (ie devNNN in 16.12.8.3.dev274+ngd08a23c)
  - git fetch --unshallow
  - export PORTAL_VERSION="$(python setup.py --version)"

  - createdb
      --owner "$PGUSER"
      --username "$PGUSER"
    "$PGDATABASE"

  - pip install --upgrade pip setuptools

install:
  - pip install tox

script:
  - tox

after_success:
  # Only run build steps in corresponding tox env
  - if [[ "$TOXENV" != "build" ]]; then travis_terminate 0;fi

  # Set primary docker tag (TAG) based on branch, or current tag
  # Precedence: current git tag, current branch (with develop and master mapped to latest and stable respectively)
  - declare -A TAGS=(["develop"]="latest" ["master"]="stable");
    export TAG=${TAGS["${TRAVIS_BRANCH}"]:-${TRAVIS_BRANCH//\//_}}
  - export TAG=${TRAVIS_TAG:-${TAG}}

  # List of tags to apply to docker image
  # TravisCI doesn't support Bash arrays
  # See https://github.com/travis-ci/travis-ci/issues/3149
  - export DOCKER_TAGS="$TAG $SHORT_HASH $TRAVIS_COMMIT $TRAVIS_BUILD_NUMBER"

  - cp docker/portal.env.default docker/portal.env
  - export COMPOSE_FILE='docker/docker-compose.yaml:docker/docker-compose.build.yaml'
  # Build debian package from current repo and branch (else "develop")
  - BRANCH="${TRAVIS_BRANCH:-develop}"
    docker-compose run builder

  # Build portal docker image from debian package
  - docker-compose build web

before_deploy: ./bin/docker-login.sh

# Only deploy from default virtual env TravisCI job
deploy:
  - provider: script
    skip_cleanup: true
    on:
      all_branches: true
      condition:
        - $TOXENV = build
        - $DEPLOY = true
        - -v ARTIFACTORY_API_KEY
    script:
      curl
        --verbose
        --upload-file debian/artifacts/*.deb
        --user "$ARTIFACTORY_USERNAME:$ARTIFACTORY_API_KEY"
        "$ARTIFACTORY_REPO_URL/$PACKAGE_NAME;deb.distribution=stable;deb.component=main;deb.architecture=amd64"

after_deploy:
  - ./bin/docker-push.sh
  - docker images --digests --all
